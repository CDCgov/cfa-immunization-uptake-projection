# The data sets to load and how to interpret them
data:
  season_start_month: 7
  season_start_day: 1
  # filter data; eg `vaccine: covid` means filter column "vaccine" for value "covid"
  filters:
    vaccine: [flu]
    geography_type: [admin1] # For states, use admin1. For national, use "nation"
    domain_type: [age]
    domain: [18+ years]
    indicator_type: [4-level vaccination and intent, uptake]
    indicator: [received a vaccination]
    time_type: [month]
  # keep only these data columns
  keep: [estimate, time_end, lci, uci, geography] # For states, include geography
  # use these columns as grouping factors. Use an empty list if there are none.
  groups: [season, geography] # For states, include geography

# Timeframe for the longest desired forecast
forecast_timeframe:
  start: 2023-09-01
  end: 2024-06-30
  interval: 1mo

# Spacing between multiple forecasts, for evaluation
evaluation_timeframe:
  interval:  # e.g. 3mo, otherwise leave this blank if you don't want evaluation

# Details of the models to fit
models:
  - name: LPLModel
    seed: 42
    params:
      A_shape1: 100.0
      A_shape2: 180.0
      A_sig: 80.0
      H_shape1: 100.0
      H_shape2: 225.0
      n_shape: 150.0
      n_rate: 6.0
      n_sig: 80.0
      M_shape: 2.0
      M_rate: 25.0
      M_sig: 80.0
      d_shape: 1000
      d_rate: 3.0

# MCMC control parameters
mcmc:
  num_warmup: 1000
  num_samples: 1000
  num_chains: 4

# score metrics
scores:
  quantiles: [0.5] # Must specify at least one fraction
  difference_by_date: [2024-03-31] # if blank, abs_diff will not be used
  others: [mspe]

# Prediction credible interval plot
forecast_plots:
  interval: # need to be a fraction #
    lower: 0.025
    upper: 0.975
  n_trajectories: 20

diagnostics:
  model: [LPLModel]
  forecast_date: [2023-09-01]
  # If blank: use start and end in "forecast_timeframe" and interval
  # in "evaluation_timeframe".
  # If one element: use that date only.
  # If two elements: use the first date as start and
  # the second date as end, separated by ["evaluation_timeframe"]["interval"].
  plot: [posterior_density_plot, parameter_trace_plot]
  table: [print_posterior_dist, print_model_summary]
