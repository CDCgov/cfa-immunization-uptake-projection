# The data sets to load and how to interpret them
data:
  season_start_month: 9
  season_start_day: 1
  # filter data; eg `vaccine: covid` means filter column "vaccine" for value "covid"
  filters:
    vaccine: [covid]
    geography_type: [nation]
    domain_type: [overall, age]
    domain: [overall, 18+ years]
    indicator_type: [4-level vaccination and intent, Bivalent Booster Uptake and Intention]
    indicator: [received a vaccination, Received updated bivalent booster dose (among adults who completed primary series)]
    time_type: [week]
  # keep only these data columns
  keep: [estimate, time_end, lci, uci]
  # use these columns as grouping factors. Almost always use at least "season", but use None if there are truly none.
  groups: [season]

# Timeframe for the longest desired forecast
forecast_timeframe:
  start: 2024-02-03
  end: 2024-04-30
  interval: 7d

# Details of the models to fit
models:
  - name: LPLModel
    seed: 0
    params:
      A_shape1: 100.0
      A_shape2: 180.0
      A_sig: 40.0
      H_shape1: 100.0
      H_shape2: 225.0
      n_shape: 25.0
      n_rate: 1.0
      M_shape: 1.0
      M_rate: 10.0
      M_sig: 40
      d_shape: 350.0
      d_rate: 1.0
    mcmc:
      num_warmup: 1000
      num_samples: 1000
      num_chains: 1

# score metrics
# score metrics
scores:
  quantiles: [0.025,0.5,0.975] # Must specify at least one
  difference_by_date: [2024-03-31] # if blank, abs_diff will not be used
  others: mspe
  group_to_plot: [season]

# Spacing between multiple forecasts, for evaluation
evaluation_timeframe:
  interval: 14d # Leave this blank if you don't want evaluation

# Prediction credible interval plot
forecast_plots:
  interval: # need to be a fraction #
    lower: 0.025
    upper: 0.975
  n_trajectories: 20

diagnostics:
  model: [LPLModel]
  forecast_date: [2024-02-03]
  # If blank: use start and end in "forecast_timeframe" and interval
  # in "evaluation_timeframe".
  # If one element: use that date only.
  # If two elements: use the first date as start and
  # the second date as end, separated by ["evaluation_timeframe"]["interval"].
  plot: [posterior_density_plot]
  table: [print_posterior_dist]
